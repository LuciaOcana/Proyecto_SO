#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <stdio.h>
#include <mysql.h>
//#include <pthread.h>

//---------------------------------------------------------------------------------------------------------------------------------------------------
//NOTAS:
	/*Antes de ejecutar nuestro programa en c tenemos que:
	- Entrar en el directorio (desde consola) donde tenemos ubicados los archivos necesarios (num_partidas_ganadas_Juan.sql).
	- Introducir el comando "mysql -u root -p" y introducir contrase\ufff1a "mysql".
	- Introducir el comando "source num_partidas_ganadas_Juan.sql;".
	- Abrir el codigo en c y ejecutarlo.
	*NOTA* : si no sigue estos pasos, no se realizara correctamente el programa ni se actualizaran los datos del fichero .sql, por tanto
	cada vez que actualize dicho fichero .sql tendra que introducir el comando "source num_partidas_ganadas_Juan.sql" para actualizar
	los datos.*/

//---------------------------------------------------------------------------------------------------------------------------------------------------

int main(int argc, char *argv[])
{
	
	int sock_conn, sock_listen, ret;
	struct sockaddr_in serv_adr;
	
	char peticion[512];
	char respuesta[512];
	
	char usuario[20];
	char contrasena[20];
	int partidas_ganadas;
	char consulta[80];
	char consulta_id[80];
	
	MYSQL * conn;
	int err;
	MYSQL_RES * resultado;
	MYSQL_ROW row;
	
	
	//Creamos la conexi\ufff3n a MYSQL
	conn = mysql_init(NULL);
	if (conn == NULL)
	{
		printf("Error al crear la connexion: %u %s \n", mysql_errno(conn), mysql_error(conn));
		exit(1);
	}
	
	conn = mysql_real_connect(conn,"localhost","root","mysql","Juego",0,NULL,0);
	if (conn == NULL)
	{
		printf("Error al inicializar la conexion: %u %s \n", mysql_errno(conn), mysql_error(conn));
		exit(1);
	}
	
	
// INICIALIZACIￓN
	// Abrimos el socket.
	if ((sock_listen = socket(AF_INET, SOCK_STREAM, 0)) < 0)
		printf("Error creant socket");
	// Hacemos bind en el puerto.
	memset(&serv_adr, 0, sizeof(serv_adr));// inicializa en zero serv_addr.
	serv_adr.sin_family = AF_INET;
	// asocia el socket a cualquiera de las IP de la maquina. 
	//htonl formatea el numero que recibe al formato necesario.
	serv_adr.sin_addr.s_addr = htonl(INADDR_ANY);
	// escucharemos en el port (X).
	serv_adr.sin_port = htons(9252);
	if (bind(sock_listen, (struct sockaddr *) &serv_adr, sizeof(serv_adr)) < 0)
		printf ("Error al bind");
	//La cola de peticiones pendientes no podra ser superior a 4
	if (listen(sock_listen, 100) < 0)
		printf("Error en el Listen");
	int i;
	
//---------------------------------------------------------------------------------------------------------------------------------------------------
	//Bucle para realizar las peticiones.
	for(;;)
	{
		printf ("Escuchando\n");
		//sock_conn es el socket que usaremos para este cliente
		sock_conn = accept(sock_listen, NULL, NULL);
		printf ("He recibido conexi?n\n");
		
		//Bucle de atenci￳n al cliente
		int terminar = 0;
		while (terminar==0)
		{
			// Ahora recibimos su peticion
			ret=read(sock_conn,peticion, sizeof(peticion));
			printf ("Recibida una peticion\n");
			// Tenemos que a?adirle la marca de fin de string 
			// para que no escriba lo que hay despues en el buffer
			peticion[ret]='\0';
			
			
			//Recogemos el codigo indicado por cada petici￳n.
			char *p = strtok( peticion, "/");
			int codigo =  atoi (p);
			p = strtok( NULL, "/");
			
//---------------------------------------------------------------------------------------------------------------------------------------------------
//PETICIONES
			if (codigo == 0)
			{
				terminar=1;
			}
//PIDEN LAS PARTIDAS GANADAS
			if (codigo ==1)
			{ 
				strcpy(usuario,p);
				printf("Codigo: %d, Nombre: %s, Partidas_ganadas: %d \n",codigo, usuario, partidas_ganadas);
				sprintf(consulta,"SELECT Jugador.partidas_ganadas FROM Jugador WHERE Jugador.username ='%s' ",usuario);
				err=mysql_query(conn, consulta);
				if (err!=0){
					printf ("Error al consultar datos de la base %u %s\n", mysql_errno(conn),mysql_error(conn));
					exit(1);
				}
				resultado = mysql_store_result(conn);
				row = mysql_fetch_row(resultado);
				if (row == NULL)
				{
					printf("No se ha obtenido la consulta \n"); 
				}
				else
				{
					
					printf("El usuario ha ganado %d partidas \n",row[0]);
					sprintf(respuesta,"%s",row[0]);
				}
			}
			
//PIDEN LOS TABLEROS
			if (codigo == 2){ 
				strcpy (usuario, p);
				printf ("Codigo: %d, Nombre: %s \n", codigo, usuario);
				
				sprintf (consulta, "SELECT Partida.tablon FROM (Partida,Jugador,Participacion) WHERE Jugador.username = '%s' AND Jugador.id=Participacion.idJ AND Participacion.idP=Partida.id",usuario); 
				err=mysql_query(conn, consulta);
				if (err!=0){
					printf ("Error al consultar datos de la base %u %s\n", mysql_errno(conn),mysql_error(conn));
					exit(1);
				}
				//Recogemos el resultado de la consulta 
				resultado = mysql_store_result(conn);
				row = mysql_fetch_row(resultado);
				char tableros[100] = " ";
				if (row == NULL)
				{
					printf("No se ha obtenido la consulta \n"); 
				}
				else
				{
					while (row!=NULL){
						printf("Tablero: %s \n",row[0]);
						sprintf(tableros,"%s , %s",tableros,row[0]);
						row = mysql_fetch_row(resultado);
					}
					
					sprintf(respuesta,"%s",tableros);
				}
				
			}
			
//PIDEN EL ID DEL USUARIO
			if (codigo ==3){ 
				strcpy (usuario, p);
				printf ("Codigo: %d, Nombre: %s \n", codigo, usuario);
				
				sprintf(consulta, "SELECT Jugador.id FROM Jugador WHERE Jugador.username='%s' ",usuario);
				err=mysql_query(conn, consulta);
				if (err!=0){
					printf ("Error al consultar datos de la base %u %s\n", mysql_errno(conn),mysql_error(conn));
					exit(1);
				}
				//Recogemos el resultado de la consulta 
				resultado = mysql_store_result(conn);
				row = mysql_fetch_row(resultado);
				if (row == NULL)
				{
					printf("No se ha obtenido la consulta \n"); 
				}
				else
				{
					
					printf("El id del usuario es:%s \n",row[0]);
					sprintf(respuesta,"%s",row[0]);
				}
			}
			
//INSERTA USUARIO Y CONTRASE￑A EN LA BASE DE DATOS
			if (codigo == 4){
				
				strcpy (usuario, p);
				p = strtok( NULL, "/");
				strcpy(contrasena,p);
				printf ("Codigo: %d, Nombre: %s, Contrase￯﾿ﾃ￯ﾾﾱa: %s\n", codigo, usuario, contrasena);
				
				//Creamos la consulta
				sprintf(consulta, "SELECT Jugador.username FROM Jugador WHERE Jugador.username='%s' ",usuario); 
				// hacemos la consulta 
				err=mysql_query (conn, consulta); 
				if (err!=0) {
					printf ("Error al consultar datos de la base %u %s\n",
							mysql_errno(conn), mysql_error(conn));
					exit (1);
				}
				//Recogemos el resultado
				resultado = mysql_store_result (conn);
				row=mysql_fetch_row(resultado); 
				if (row==NULL){ 
					//Consultamos el numero de usuarios registrados para obtener el ￯﾿ﾃ￯ﾾﾺltimo id
					strcpy(consulta_id,"SELECT MAX(Jugador.id) FROM (Jugador)");
					err=mysql_query (conn, consulta_id);
					if (err!=0) {
						printf ("Error al consultar datos de la base %u %s\n",
								mysql_errno(conn), mysql_error(conn));
						exit (1);
					}
					//Recogemos el resultado de la consulta de id
					resultado = mysql_store_result (conn); 
					row = mysql_fetch_row (resultado);
					
					int idJugador=atoi(row[0])+1;
					char insert[100];
					sprintf(insert,"INSERT INTO Jugador(id,username,pass,partidas_ganadas) VALUES (%d,'%s','%s',0)",idJugador,usuario,contrasena);
					
					err=mysql_query (conn, insert); 
					if (err!=0) {
						printf ("Error al insertar datos de la base %u %s\n",
								mysql_errno(conn), mysql_error(conn));
						exit (1);
						sprintf(respuesta,"NO INSERTADO");					
					}
					else
						sprintf(respuesta,"SI");
				}
				else{
					sprintf(respuesta,"NO REGISTRADO");
				}			
			}
			
//COMPRUEBA EL NOMBRE DE USUARIO Y CONTRASE￑A EN LA BASE DE DATOS
			if (codigo == 5){
				
				strcpy (usuario, p);
				p = strtok( NULL, "/");
				strcpy(contrasena,p);
				printf ("Codigo: %d, Nombre: %s, Contrase￯﾿ﾃ￯ﾾﾱa: %s\n", codigo, usuario, contrasena);
				
				sprintf(consulta, "SELECT Jugador.username, Jugador.pass FROM Jugador WHERE (Jugador.username='%s' AND Jugador.pass='%s')",usuario,contrasena);
				err=mysql_query(conn, consulta);
				
				if (err!=0){
					printf ("Error al consultar datos de la base %u %s\n", mysql_errno(conn),mysql_error(conn));
					exit(1);
				}
				//Recogemos el resultado de la consulta 
				resultado = mysql_store_result(conn);
				row = mysql_fetch_row(resultado);
				if (row == NULL)
				{
					printf("No se ha obtenido la consulta \n"); 
					sprintf(respuesta,"INCORRECTO");
				}
				else
				{
					
					printf("Se ha podido registrar correctamente \n");
					sprintf(respuesta,"CORRECTO");
				}
			}
			
			
			if (codigo != 0)
			{
				printf("Respuesta: %s \n", respuesta);
				// Enviamos la respuesta
				write (sock_conn,respuesta, strlen(respuesta));
				// Se acabo el servicio para este cliente
			}
		// Se acabo el servicio para este cliente
/*		close(sock_conn); */
		}
		close(sock_conn);
	}
	 
}

